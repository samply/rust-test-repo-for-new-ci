on:
  workflow_call:
    inputs:
      image-name:
        description: Name of the Docker image to build and push, e.g. samply/beam-proxy
        required: true
        type: string
      build-file:
        description: Path to the Dockerfile to use
        required: false
        type: string
        default: Dockerfile
      build-args:
        description: Build arguments to pass to docker build
        required: false
        type: string

    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  samply-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.event_name == 'pull_request' && format('ghcr.io/{0}', inputs.image-name) || inputs.image-name }}
          # The "latest" tag is set according to these rules: https://github.com/docker/metadata-action#latest-tag
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: github.event_name == 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: setup-buildx

      - name: Cache
        uses: actions/cache@v4
        with:
          path: cache-mount
          # Currently the cache action does not allow to update existing caches so we are using 
          # this workaround: https://github.com/actions/cache/issues/342#issuecomment-673371329
          key: cache-mount-${{ hashFiles(inputs.build-file) }}-${{ github.run_id }}
          restore-keys: cache-mount-${{ hashFiles(inputs.build-file) }}-

      # Cache mounts cannot be exported using cache-from and cache-to: https://github.com/moby/buildkit/issues/1512
      # We are using the BuildKit Cache Dance action to export and restore cache mounts manually.
      - name: Restore Docker cache mounts
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          builder: ${{ steps.setup-buildx.outputs.name }}
          cache-dir: cache-mount
          dockerfile: ${{ inputs.build-file }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.build-file }}
          build-args: ${{ inputs.build-args }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Docker layer caching is disabled because it does not result in a speedup.
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
